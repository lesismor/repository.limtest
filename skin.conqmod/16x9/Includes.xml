<includes>

	<include file="Defaults.xml" />
	<include file="Include_Home_OSMC.xml" />
	<include file="Include_Home_Vertical.xml" />
	<include file="Include_Home_Horizontal.xml" />
	<include file="Include_Home_Lumos.xml" />
	<include file="Includes_Widgets.xml" />
	<include file="script-skinshortcuts-includes.xml" />
	<include file="Include_DialogSettings.xml" />
	<include file="Viewtype50.xml" />
	<include file="Viewtype51.xml" />
	<include file="Viewtype52.xml" />
	<include file="Viewtype53.xml" />
	<include file="Viewtype54.xml" />
	<include file="Viewtype55.xml" />
	<include file="Variables.xml" />
	
	
	
	<include name="fixedlistvertical">
	    <control type="fixedlist" id="50">
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
			<left>0</left>
			<!-- <centertop>50%</centertop> -->
			<top>150</top>
			<width>470</width>
			<height>420</height>
			<onup>50</onup>
			<ondown>50</ondown>
			<onleft>60</onleft>
			<onright condition="!Skin.HasSetting(KioskMode)">3001</onright>
			<pagecontrol>60</pagecontrol>
			<focusposition>0</focusposition>
			<orientation>vertical</orientation>
			<viewtype label="535">list</viewtype>
			<scrolltime tween="sine" easing="out">240</scrolltime>
			<visible>[Container.Content(songs) + Window.IsVisible(musicplaylist)] | [!Container.Content(movies) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(albums) + !Container.Content(songs) + !Window.IsVisible(pictures)]</visible>

			<itemlayout height="60" width="470">
				<control type="label">
					<left>32</left>
					<top>0</top>
					<width>470</width>
					<height>60</height>
					<font>Font36</font>
					<label>[LIGHT]$INFO[ListItem.Label][/LIGHT]</label>
					<textcolor>TextColor2</textcolor>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>23</top>
					<width>14</width>
					<height>14</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>OverlayColorNF</colordiffuse>
					<animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
				</control>
			</itemlayout>

			<focusedlayout height="120" width="470">
				<control type="label">
					<left>32</left>
					<top>0</top>
					<width>470</width>
					<height>120</height>
					<font>Font48</font>
					<label>[B]$INFO[ListItem.Label][/B]</label>
					<textcolor>TextColor1</textcolor>
					<scroll>True</scroll>
					<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="true" condition="!Control.HasFocus(50)">Conditional</animation>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>53</top>
					<width>14</width>
					<height>14</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>OverlayColorFO</colordiffuse>
					<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="true" condition="!Control.HasFocus(50)">Conditional</animation>
				</control>
			</focusedlayout>

		</control>
	</include>
	
	
    <include name="horizontalpanel">
	    <control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
		    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
			<left>13</left>
			<top>570</top>
			<width>1894</width>
			<height>490</height>
			<!-- <texture>common/glass-black1.png</texture> -->
			<texture>$VAR[PanelImage]</texture>
			<include>WindowFadeAnimation</include>
		</control>
	</include>
	
	
	<include name="verticalpanel">
	    <control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
			<left>20</left>
			<top>20</top>
			<width>490</width>
			<height>1040</height>
			<!-- <texture>common/glass-black1.png</texture> -->
			<texture>$VAR[PanelImage]</texture>
			<include>WindowFadeAnimation</include>
		</control>
	</include>
	
	<include name="verticallogo">
	    <control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
			<left>20</left>
			<top>200</top>
			<width>490</width>
			<height>490</height>
			<!-- <texture>common/glass-black1.png</texture> -->
			<texture>$VAR[Logo]</texture>
			<include>WindowFadeAnimation</include>
		</control>
	</include>
	
	<include name="verticaltv">
	    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
	<!-- tv window -->
		<control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
			<right>13</right>
			<top>12</top>
			<width>845</width>
			<height>440</height>
			<texture>common/tvoverlay.png</texture>
			<!-- <include>WindowFadeAnimation</include> -->
		</control>
		<control type="group"> 
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
			<height>440</height>			
			<width>845</width>
			<right>13</right>
			<top>12</top>
		    <control type="videowindow">
			    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
                <visible>Player.HasVideo</visible>			
			    </control>
		</control> 
		<control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),vertical)</visible>
		    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
			<right>-45</right>
			<top>-23</top>
			<width>960</width>
			<height>540</height>
			<texture>common/tv.png</texture>
			<include>WindowFadeAnimation</include>
		</control>
	</include>
	
	
	
	<include name="horizontaltv">
	    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
	<!-- tv window -->
		<control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
			<left>13</left>
			<top>12</top>
			<width>845</width>
			<height>440</height>
			<texture>common/tvoverlay.png</texture>
			<!-- <include>WindowFadeAnimation</include> -->
		</control>
		<control type="group"> 
		    <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
			<height>440</height>			
			<width>845</width>
			<left>13</left>
			<top>12</top>
		    <control type="videowindow">
			    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
                <visible>Player.HasVideo</visible>			
			    </control>
		</control> 
		<control type="image">
		    <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
		    <!-- <include condition="String.IsEqual(Skin.String(menuStyle),horizontal)">HomeHorizontal</include> -->
			<left>-45</left>
			<top>-23</top>
			<width>960</width>
			<height>540</height>
			<texture>common/tv.png</texture>
			<include>WindowFadeAnimation</include>
		</control>
	</include>
	
	<!-- <include name="listviewverticalthumb">
	    <visible>!String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
	    <include name="image-51">
		    <param name="fallback">DefaultVideo.png</param>
		    <param name="visible">False</param>
		    <definition>
	            <control type="image"> 
				    <left>50</left>
				    <top>225</top>
				    <top>50</top>
				    <width>405</width>
				    <height>600</height>
				    <height>500</height>
				    <fadetime>200</fadetime>
				    <texture fallback="$PARAM[fallback]" background="true" colordiffuse="TextColor1">$VAR[mediaImages]</texture>
				    <aspectratio aligny="center">keep</aspectratio>
				    <visible>$PARAM[visible]</visible>
				    <visible>String.StartsWith(ListItem.Icon,Default)</visible>
			    </control>

			    <control type="image">
			        <visible>!String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
				    <left>50</left>
				    <top>225</top>
				    <top>50</top>
				    <width>405</width>
				    <height>600</height>
				    <height>500</height>
				    <fadetime>200</fadetime>
				    <texture fallback="$PARAM[fallback]" background="true">$VAR[mediaImages]</texture>
				    <aspectratio aligny="center">keep</aspectratio>
				    <visible>$PARAM[visible]</visible>
				    <bordertexture border="1,1,1,69">views/DropShadow.png</bordertexture>
				    <bordersize>0,0,0,66</bordersize>
				    <visible>!String.StartsWith(ListItem.Icon,Default)</visible>
			    </control>
		    </definition>
		</include>	
	</include>
	
	<include name="listviewhorizontalthumb">
	    <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
	        <include name="image-51">
		    <param name="fallback">DefaultVideo.png</param>
		    <param name="visible">False</param>
		    <definition>
	            <control type="image">
		            <left>120</left>
			        <top>225</top>
			        <top>600</top>
			        <width>405</width>
			        <height>600</height>
			        <height>500</height>
		        	<fadetime>200</fadetime>
			        <texture fallback="$PARAM[fallback]" background="true" colordiffuse="TextColor1">$VAR[mediaImages]</texture>
			        <aspectratio aligny="center">keep</aspectratio>
			        <visible>$PARAM[visible]</visible>
			        <visible>String.StartsWith(ListItem.Icon,Default)</visible>
		        </control>

		        <control type="image">
		            <visible>String.IsEqual(Skin.String(menuStyle),horizontal)</visible>
			        <left>120</left>
			        <top>225</top>
			        <top>600</top>
			        <width>405</width>
			        <height>600</height>
			        <height>500</height>
			        <fadetime>200</fadetime>
			        <texture fallback="$PARAM[fallback]" background="true">$VAR[mediaImages]</texture>
			        <aspectratio aligny="center">keep</aspectratio>
			        <visible>$PARAM[visible]</visible>
			        <bordertexture border="1,1,1,69">views/DropShadow.png</bordertexture>
			        <bordersize>0,0,0,66</bordersize>
			        <visible>!String.StartsWith(ListItem.Icon,Default)</visible>
		        </control>
		    </definition>
		<include>	
	</include> -->
	
	
	<!-- Fullscreen dimensions -->
	<include name="FullscreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>1920</width>
		<height>1080</height>
	</include>

	<!-- Window background image -->
	<include name="WindowBackgroundImage">
		<param name="isHomeWindow">False</param>
		<param name="animate">False</param>
		<definition>
			<control type="videowindow">
				<include>FullscreenDimensions</include>
				<visible>Player.HasVideo + Skin.HasSetting(BackgroundVideo)</visible>
				<visible>!$PARAM[animate]</visible>
			</control>

			<!-- Water Image -->
			<!-- Overlay -->
			<control type="image">
				<include>FullscreenDimensions</include>
				<texture>$VAR[BackgroundImage]</texture>
				<animation effect="fade" start="0" end="100" time="200" condition="$PARAM[animate]">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200" delay="70" condition="$PARAM[animate]">WindowClose</animation>
				<animation effect="fade" start="100" end="80" condition="[Player.HasVideo + Skin.HasSetting(BackgroundVideo)] | [Player.HasAudio + Skin.HasSetting(BackgroundVisualisation)]">Conditional</animation>
			</control>

			<control type="group">
				<animation effect="fade" start="100" end="0" condition="[Player.HasVideo + Skin.HasSetting(BackgroundVideo)] | [Player.HasAudio + Skin.HasSetting(BackgroundVisualisation)]">Conditional</animation>
				<animation effect="fade" start="70" end="70" condition="![Player.HasVideo + Skin.HasSetting(BackgroundVideo)] | [Player.HasAudio + Skin.HasSetting(BackgroundVisualisation)]">Conditional</animation>

				<!-- Artists Slideshow -->
				<control type="multiimage">
					<include>FullscreenDimensions</include>
					<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
					<aspectratio>keep</aspectratio>
					<timeperimage>10000</timeperimage>
					<fadetime>2000</fadetime>
					<randomize>true</randomize>
					<visible>Player.HasAudio + System.HasAddon(script.artistslideshow) + Skin.HasSetting(EnableArtistFanart)</visible>
				</control>

				<!-- Background Image -->
				<control type="image" id="10000">
					<include>FullscreenDimensions</include>
					<texture background="true" fallback="Transparent.png">$VAR[widgetBackground]</texture>
					<colordiffuse>FanartDiffuse</colordiffuse>
					<fadetime>400</fadetime>
					<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
					<visible>!Skin.HasSetting(BackgroundFanart)</visible>
					<animation effect="fade" start="0" end="100" time="200" delay="70" condition="$PARAM[animate]">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200" condition="$PARAM[animate]">WindowClose</animation>
				</control>

				<!-- Weather background -->
				<include>skinshortcuts-template-weatherBackground</include>

				<!-- Visualisation -->
				<control type="visualisation">
					<include>FullscreenDimensions</include>
					<visible>Player.HasAudio + Skin.HasSetting(BackgroundVisualisation) + !String.Contains(Window(Videos).Property(TvTunesIsAlive),True)</visible>
				</control>
			</control>

		</definition>
	</include>

	<!-- Window background image with fade animation -->
	<include name="WindowFadeBackgroundImage">
		<control type="group">
			<include content="WindowBackgroundImage">
				<param name="animate">True</param>
			</include>
		</control>
	</include>

	<!-- Dialog fade background image -->
	<include name="DialogFadeBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture colordiffuse="DarkenColor">dialogs/DialogTextBackground.png</texture>
			<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		</control>
	</include>

	<!-- Options background image -->
	<include name="OptionsBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture border="20">dialogs/OptionsBackground.png</texture>
		</control>
	</include>

	<!-- Curve - Horizontal -->
	<include name="Curve-Vertical">
		<param name="width">1420</param>
		<definition>
			<control type="image">
				<right>20</right>
				<top>20</top>
				<width>$PARAM[width]</width>
				<height>1040</height>
				<texture border="40,0,0,0">common/Curve.png</texture>
				<visible>Skin.HasSetting(ShowCurve)</visible>
			</control>
		</definition>
	</include>

	<!-- Curve - Horizontal Narrow -->
	<include name="Curve-VerticalNarrow">
		<control type="image">
			<right>20</right>
			<top>20</top>
			<width>1280</width>
			<height>1040</height>
			<texture border="40,0,0,0">common/Curve.png</texture>
			<visible>Skin.HasSetting(ShowCurve)</visible>
		</control>
	</include>

	<!-- Curve - Vertical -->
	<include name="Curve-Horizontal">
		<definition>
			<control type="image">
				<left>20</left>
				<top>20</top>
				<width>1880</width>
				<height>$PARAM[height]</height>
				<texture border="0,0,0,40">common/CurveHorz.png</texture>
				<visible>Skin.HasSetting(ShowCurve)</visible>
			</control>
		</definition>
	</include>

	<!-- Time -->
	<include name="Time">
		<param name="heading">$VAR[HeadingLabel]</param>
		<definition>
			<!-- Window heading -->
			<control type="label">
				<left>120</left>
				<top>110</top>
				<width>1680</width>
				<height>33</height>
				<aligny>top</aligny>
				<label>$PARAM[heading]</label>
				<font>Font33</font>
				<animation type="WindowOpen" condition="Window.Previous(startup)">
					<effect type="fade" start="50" end="100" time="200" tween="cubic" easing="out"/>
				</animation>
				<visible>!Skin.HasSetting(Headings)</visible>
			</control>

			<control type="group">
				<visible>!Window.IsVisible(notification) + !Window.IsVisible(extendedprogressdialog) + !Window.IsVisible(volumebar) + !String.IsEqual(Window(10000).Property(isCaching),True)</visible>

				<animation type="WindowOpen" condition="Window.Previous(startup)">
					<effect type="fade" start="50" end="100" time="200" tween="cubic" easing="out"/>
				</animation>
				<animation type="Visible">
					<effect type="slide" start="120,0" end="0,0" time="200" />
					<effect type="fade" start="0" end="100" time="200" />
				</animation>
				<animation type="Hidden">
					<effect type="slide" end="120,0" time="200" />
					<effect type="fade" start="100" end="0" time="200" />
				</animation>

				<!-- Time -->
				<control type="label">
					<right>120</right>
					<top>110</top>
					<width>1680</width>
					<height>33</height>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.DateTime]</label>
					<font>Font33</font>
					<textcolor>DialogColor1</textcolor>
					<visible>!Player.HasMedia | !Integer.IsGreater(Player.Duration,0)</visible>
				</control>

				<control type="group">
					<visible>Player.HasMedia + Integer.IsGreater(Player.Duration,0)</visible>

					<!-- Now Playing - Video -->
					<control type="fadelabel">
						<right>50</right>
						<top>150</top>
						<width>1680</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>$INFO[VideoPlayer.TVShowTitle]</label>
						<label>$INFO[VideoPlayer.ChannelNumber,[LIGHT](,)[/LIGHT] ]$INFO[VideoPlayer.ChannelName]</label>
						<label>$INFO[VideoPlayer.Season,[LIGHT]s,[/LIGHT]]$INFO[VideoPlayer.Episode,[LIGHT]e,[/LIGHT]  ]$INFO[VideoPlayer.Title]</label>
						<label>$INFO[VideoPlayer.EpisodeName]</label>
						<label>$INFO[Player.FinishTime,[LIGHT]Finishes at ,[/LIGHT]  ]$INFO[System.Time]</label>
						<visible>Player.HasVideo</visible>
						<pauseatend>5000</pauseatend>
					</control>

					<!-- Now Playing - Audio -->
					<control type="fadelabel">
						<right>170</right>
						<top>93</top>
						<width>1680</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>[LIGHT]$INFO[MusicPlayer.TrackNumber,,. ][/LIGHT]$INFO[MusicPlayer.Title]</label>
						<label>[LIGHT]$INFO[MusicPlayer.Artist,,  ][/LIGHT]$INFO[MusicPlayer.Album]</label>
						<label>$INFO[Player.FinishTime,[LIGHT]Finishes at ,[/LIGHT]  ]$INFO[System.Time]</label>
						<visible>Player.HasAudio</visible>
						<pauseatend>5000</pauseatend>
					</control>

					<!-- Now Playing - Progress -->
					<control type="label">
						<right>50</right>
						<top>84</top>
						<width>1680</width>
						<height>33</height>
						<aligny>top</aligny>
						<align>right</align>
						<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
						<font>Font33</font>
						<textcolor>DialogColor1</textcolor>
					</control>

					<!-- Play/Paused Image -->
					<control type="image">
						<right>50</right>
						<top>0</top>
						<width>60</width>
						<height>60</height>
						<texture colordiffuse="DialogColor1">osd/OSDPlayNF.png</texture>
						<visible>!Player.Paused</visible>
					</control>
					<control type="image">
						<right>110</right>
						<top>100</top>
						<width>60</width>
						<height>60</height>
						<texture colordiffuse="DialogColor1">osd/OSDPauseNF.png</texture>
						<visible>Player.Paused</visible>
					</control>

				</control>
			</control>
		</definition>
	</include>

	<!-- Window animation -->
	<include name="WindowFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	</include>

	<!-- Visible animation -->
	<include name="VisibleFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>

	<!-- Dialog animation -->
	<include name="DialogZoomAnimation">
		<animation type="WindowOpen">
			<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose">
			<effect type="zoom" start="100" end="70" center="auto" time="300" />
			<effect type="fade" start="100" end="0" time="300" />
		</animation>
	</include>

	<!-- Options animation -->
	<include name="OptionsAnimation">
		<animation type="Visible">
			<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="Hidden">
			<effect type="zoom" start="100" end="70" center="auto" time="100" />
			<effect type="fade" start="100" end="0" time="100" />
		</animation>
	</include>

	<!-- Keyboard buttons -->
	<include name="KeyboardButtons">
		<width>84</width>
		<height>74</height>
		<font>Font48</font>
		<align>center</align>
		<textoffsetx>10</textoffsetx>
		<fadetime>200</fadetime>
		<texturefocus border="25,0,25,0">dialogs/KeyboardButton.png</texturefocus>
	</include>

	<!-- OSD Play buttons -->
	<include name="OSDPlayStopButtons">
		<control type="togglebutton" id="5">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDPauseNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDPauseNF.png</texturenofocus>
			<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding | Player.IsTempo</usealttexture>
			<alttexturefocus colordiffuse="DialogColor1">osd/OSDPlayNF.png</alttexturefocus>
			<alttexturenofocus colordiffuse="DialogColor2">osd/OSDPlayNF.png</alttexturenofocus>
			<onclick>PlayerControl(Play)</onclick>
		</control>
		<control type="button" id="6">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDStopNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>

	<!-- OSD Stop buttons -->
	<include name="OSDStopButton">
		<control type="button" id="5">
			<width>60</width>
			<height>60</height>
			<texturefocus colordiffuse="DialogColor1">osd/OSDStopNF.png</texturefocus>
			<texturenofocus colordiffuse="DialogColor2">osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>

	<!-- Item count -->
	<include name="ItemCount">
		<control type="grouplist">
			<right>120</right>
			<bottom>110</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>6</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>
			<control type="label">
				<top>3</top>
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[Container.NumItems]</label>
				<font>Font25</font>
				<textcolor>TextColor2</textcolor>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$VAR[ContentType]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
			</control>
		</control>
	</include>

	<!-- Media Flags -->
	<include name="MediaFlags">
		<control type="grouplist">
			<left>120</left>
			<bottom>110</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0) + !Skin.HasSetting(MediaInfo)</visible>

			<!-- Video flags -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>DefaultMovies.png</texture>
				<visible>!String.IsEmpty(ListItem.VideoCodec) + !String.IsEmpty(ListItem.VideoResolution)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[ListItem.VideoCodec,,]$INFO[ListItem.VideoResolution, ,p]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.VideoCodec) + !String.IsEmpty(ListItem.VideoResolution)</visible>
			</control>

			<!-- Audio flags -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>DefaultAudio.png</texture>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[ListItem.AudioCodec,,]$VAR[AudioChannels, ,]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
			</control>
		</control>
		<control type="grouplist">
			<left>120</left>
			<bottom>66</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0) + !Skin.HasSetting(MediaInfo)</visible>
			<animation effect="slide" time="0" start="0,0" end="0,-44" condition="String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.VideoResolution) + String.IsEmpty(ListItem.AudioCodec)">Conditional</animation>

			<!-- Duration -->
			<control type="image">
				<width>44</width>
				<height>44</height>
				<colordiffuse>TextColor2</colordiffuse>
				<texture>pvr/Timer.png</texture>
				<visible>!String.IsEmpty(ListItem.Duration) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[ListItem.Duration]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.Duration) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label> $LOCALIZE[12391]</label>
				<font>Font33</font>
				<textcolor>TextColor2</textcolor>
				<visible>!String.IsEmpty(ListItem.Duration) + !String.Contains(ListItem.Duration,:) + !Container.Content(tvshows) + !Container.Content(seasons)</visible>
			</control>
		</control>
	</include>

	<!-- Side menu animation -->
	<include name="SideMenuAnimation">
		<animation effect="slide" end="0,26" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,19)">Conditional</animation>
		<animation effect="slide" end="0,52" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,18)">Conditional</animation>
		<animation effect="slide" end="0,78" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,17)">Conditional</animation>
		<animation effect="slide" end="0,104" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,16)">Conditional</animation>
		<animation effect="slide" end="0,130" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,15)">Conditional</animation>
		<animation effect="slide" end="0,156" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,14)">Conditional</animation>
		<animation effect="slide" end="0,182" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,13)">Conditional</animation>
		<animation effect="slide" end="0,208" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,12)">Conditional</animation>
		<animation effect="slide" end="0,234" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,11)">Conditional</animation>
		<animation effect="slide" end="0,260" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,10)">Conditional</animation>
		<animation effect="slide" end="0,286" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,9)">Conditional</animation>
		<animation effect="slide" end="0,312" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,8)">Conditional</animation>
		<animation effect="slide" end="0,338" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,7)">Conditional</animation>
		<animation effect="slide" end="0,364" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,6)">Conditional</animation>
		<animation effect="slide" end="0,390" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,5)">Conditional</animation>
		<animation effect="slide" end="0,416" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,4)">Conditional</animation>
		<animation effect="slide" end="0,442" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,3)">Conditional</animation>
		<animation effect="slide" end="0,468" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,2)">Conditional</animation>
		<animation effect="slide" end="0,494" time="0" condition="String.IsEqual(Container($PARAM[containerID]).NumItems,1)">Conditional</animation>

	</include>

	<include name="Indicators">
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>30</width>
				<height>$PARAM[height]</height>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>30</width>
					<height>16</height>
					<colordiffuse>TextColor2</colordiffuse>
					<texture colordiffuse="DialogColor2">up.png</texture>

					<visible>Container($PARAM[container]).HasPrevious</visible>

					<animation type="Visible">
						<effect type="Fade" start="0" end="100" time="200"/>
						<effect type="slide" start="0,10" end="0,0" time="200"/>
					</animation>
					<animation type="Hidden">
						<effect type="Fade" start="100" end="0" time="200"/>
						<effect type="slide" start="0,0" end="0,-10" time="200"/>
					</animation>

				</control>
				<control type="image">
					<left>0</left>
					<bottom>0</bottom>
					<width>30</width>
					<height>16</height>
					<texture colordiffuse="DialogColor2">down.png</texture>

					<visible>Container($PARAM[container]).HasNext</visible>

					<animation type="Visible">
						<effect type="Fade" start="0" end="100" time="200"/>
						<effect type="slide" start="0,-10" end="0,0" time="200"/>
					</animation>
					<animation type="Hidden">
						<effect type="Fade" start="100" end="0" time="200"/>
						<effect type="slide" start="0,0" end="0,10" time="200"/>
					</animation>
				</control>
			</control>
		</definition>
	</include>

	<include name="dialogButtonBackground">
		<definition>
			<control type="group">
				<visible>!Skin.HasSetting(ShowCurve)</visible>
				<control type="image">
					<left>-1000</left>
					<bottom>90</bottom>
					<width>3980</width>
					<height>86</height>
					<texture colordiffuse="TextColor1" border="2">common/Border.png</texture>
					<visible>ControlGroup($PARAM[id]).HasFocus</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="image">
					<left>-1000</left>
					<bottom>90</bottom>
					<width>3980</width>
					<height>86</height>
					<texture colordiffuse="TextColor2" border="2">common/Border.png</texture>
					<visible>!ControlGroup($PARAM[id]).HasFocus</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="image">
					<left>0</left>
					<bottom>90</bottom>
					<width>3980</width>
					<height>86</height>
					<visible>ControlGroup($PARAM[id]).HasFocus</visible>
					<texture colordiffuse="DarkenColor">dialogs/DialogTextBackground.png</texture>
					<include>VisibleFadeAnimation</include>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(ShowCurve)</visible>
				<!-- Curve -->
				<control type="image">
					<left>20</left>
					<bottom>20</bottom>
					<width>1880</width>
					<height>160</height>
					<texture border="0,0,40,0">common/CurveHorzAlt.png</texture>
					<visible>Skin.HasSetting(ShowCurve)</visible>
				</control>
				<control type="image">
					<left>20</left>
					<bottom>20</bottom>
					<width>1880</width>
					<height>160</height>
					<texture border="0,0,40,0">common/CurveHorzAlt.png</texture>
					<include>VisibleFadeAnimation</include>
					<visible>Skin.HasSetting(ShowCurve) + ControlGroup($PARAM[id]).HasFocus</visible>
				</control>
			</control>
		</definition>
	</include>

	<!-- Classic vertical main menu styles -->
	<include name="SmallMainMenu">
		<left>120</left>
		<top>643</top>
		<width>460</width>
		<height>360</height>
		<focusposition>1</focusposition>
		<defaultcontrol>3</defaultcontrol>
	</include>
	<include name="LargeMainMenu">
		<left>120</left>
		<top>-77</top>
		<width>460</width>
		<height>1200</height>
		<focusposition>7</focusposition>
		<defaultcontrol>1</defaultcontrol>
	</include>

</includes>